# -*- coding: utf-8 -*-
"""anticorrupcao_vf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hzEBTRAUW5kVoOyPvXTRkdbG-bvefwPu
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

pd.set_option('display.max_rows', 50000)
pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 1000)

from google.colab import files
uploaded = files.upload()

import io
data1 = pd.read_csv(io.BytesIO(uploaded['contratos_rj_2019_new.csv']), sep=';', encoding='latin1')

data1.head()

#resultados obtidos com os dados sobre contatos

#análise 1 - favorecidos com maior número de contratos

r1data1 = data1[['Favorecido']]
r1data1['Contagem'] = r1data1.groupby('Favorecido')['Favorecido'].transform('count') 
r1data1 = r1data1.drop_duplicates()
r1data1.sort_values(by=['Contagem'], ascending=False)

#análise 2 - favorecidos com maior valor total em contratos

r2data1 = data1[['Favorecido', 'Valor atualizado do instrumento']]
r2data1['Valor total'] = r2data1.groupby('Favorecido')['Valor atualizado do instrumento'].transform('sum')
r2data1.drop('Valor atualizado do instrumento', axis=1, inplace=True)
r2data1 = r2data1.drop_duplicates()
r2data1.sort_values(by=['Valor total'], ascending=False)

#análise 3 - contratos que mais sofreram acréscimos

r3data1 = data1[['Favorecido', 'Valor do acrescimo ou reducao', 'Valor inicial do instrumento', 'Valor atualizado do instrumento']]
r3data1['Aumento relativo'] = r3data1['Valor atualizado do instrumento']/r3data1['Valor inicial do instrumento']
r3data1.sort_values(by='Valor do acrescimo ou reducao', ascending=False)

#análise 4 - maiores orçamentos por fonte de recursos

r4data1 = data1[['Descricao da fonte de recursos', 'Valor atualizado do instrumento']]
r4data1['Total'] = r4data1.groupby('Descricao da fonte de recursos')['Valor atualizado do instrumento'].transform('sum')
r4data1.drop('Valor atualizado do instrumento', axis=1, inplace=True)
r4data1 = r4data1.drop_duplicates()
r4data1.sort_values(by=['Total'], ascending=True)

from google.colab import files
uploaded = files.upload()

import io
data2 = pd.read_csv(io.BytesIO(uploaded['despesas_rj_2019_new.csv']), sep=';', encoding='latin1')

data2.head()

#resultados obtidos com os dados de despesas

#análise 1 - itens repetidos

r1data2 = data2[['Descricao_item_Despesa']]
r1data2['Contagem'] = r1data2.groupby('Descricao_item_Despesa')['Descricao_item_Despesa'].transform('count')
r1data2 = r1data2.drop_duplicates()
pd.options.display.max_colwidth = 100
r1data2.sort_values(by='Contagem', ascending=False)

#análise 2 - maiores despesas por grupo

r2data2 = data2[['Descricao_Acao', 'Descricao_Elemento', 'Descricao_item_Despesa', 'Orcamento_Atualizado']]
r2data2['despesas totais'] = r2data2.groupby('Descricao_Acao')['Orcamento_Atualizado'].transform('sum')
r2data2 = r2data2.drop_duplicates()
r2data2.sort_values(by = 'despesas totais', ascending=False)

#análise 3 - despesas atrasadas

r3data2 = data2[['Descricao_Acao', 'Descricao_Elemento', 'Descricao_item_Despesa', 'Orcamento_Atualizado', 'Pago']]
r3data2.sort_values(['Pago', 'Orcamento_Atualizado'], ascending = [True, False])

from google.colab import files
uploaded = files.upload()

import io
data3 = pd.read_csv(io.BytesIO(uploaded['favorecidos_rj_2019_new.csv']), sep=';', encoding='latin1')

data3.head()

#resultados obtidos com os dados sobre favorecidos

#análise 1 - favorecidos que mais aparecem

r1data3 = data3[['Favorecido','Codigo favorecido','Descricao do programa de trabalho','Vl pago']]
r1data3['Contagem'] = r1data3.groupby('Codigo favorecido')['Codigo favorecido'].transform('count')
r1data3['Vl total'] = r1data3.groupby('Descricao do programa de trabalho')['Vl pago'].transform('sum')
r1data3.drop('Vl pago', axis=1, inplace=True)
r1data3 = r1data3.drop_duplicates()
r1data3.sort_values(by='Contagem', ascending=False)

#análise 2 - favorecidos com maiores gastos totais

r2data3 = data3[['Favorecido','Descricao do programa de trabalho', 'Vl pago']]
r2data3['Vl total'] = r2data3.groupby('Favorecido')['Vl pago'].transform('sum')
r2data3.drop('Vl pago', axis=1, inplace=True)
r2data3 = r2data3.drop_duplicates()
r2data3.sort_values(by='Vl total', ascending=False)

#análise 3 - maiores despesas pontuais

r3data3 = data3[['Favorecido', 'Descricao da natureza', 'Vl liq', 'Descricao do programa de trabalho']]
r3data3['Contagem'] = r3data3.groupby('Descricao da natureza')['Descricao da natureza'].transform('count')
filtro = r3data3['Contagem'] == 1
r3data3 = r3data3[filtro]
r3data3.sort_values(by = 'Vl liq', ascending=False)

#análise 4 - maiores valores de despesas diárias por favorecido

r4data3 = data3[['Favorecido', 'Descricao da natureza', 'Vl liq', 'Vl pago', 'Descricao do programa de trabalho']]
filtro = r4data3['Descricao da natureza'] == 'DIARIAS'
r4data3 = r4data3[filtro]
r4data3['Vl total'] = r4data3.groupby('Favorecido')['Vl liq'].transform('sum')
r4data3['Contagem Favorecido'] = r4data3.groupby('Favorecido')['Favorecido'].transform('count')
r4data3.drop('Vl liq', axis=1, inplace=True)
r4data3.drop('Vl pago', axis=1, inplace=True)
r4data3 = r4data3.drop_duplicates()
r4data3.sort_values(by = 'Vl total', ascending=False)

from google.colab import files
uploaded = files.upload()

import io
data4 = pd.read_csv(io.BytesIO(uploaded['parcerias_rj_2019_new.csv']), sep=';', encoding='latin1')

data4.head()

#resultados obtidos com os dados sobre parcerias

#análise 1 - cnpjs que mais aparecem

r1data4 = data4[['Favorecidos', 'Cnpj', 'uo']]
r1data4['Contagem'] = r1data4.groupby('Cnpj')['Cnpj'].transform('count')
r1data4 = r1data4.drop_duplicates()
r1data4.sort_values(by='Contagem', ascending=False)

#análise 2 - parcerias com maiores gastos

r2data4 = data4[['Favorecidos', 'Valor']]
r2data4['Valor total'] = r2data4.groupby('Favorecidos')['Valor'].transform('sum')
r2data4.drop('Valor', axis=1, inplace=True)
r2data4 = r2data4.drop_duplicates()
r2data4.sort_values(by='Valor total', ascending=False)

#análise 3 - maiores valores solo

r3data4 = data4[['Favorecidos', 'Valor', 'uo']]
r3data4.sort_values(by='Valor', ascending=False)

from google.colab import files
uploaded = files.upload()

import io
data5 = pd.read_csv(io.BytesIO(uploaded['receita_rj_2019_new.csv']), sep=';', encoding='latin1')

data5.head()

#resultados obtidos com os dados sobre receita

#análise 1 - receita arrecadada menor que a prevista

r1data5 = data5[['DESC_RUBRICA','RECEITA_PREVISTA', 'RECEITA_ARRECADADA']]
filtro = r1data5['RECEITA_PREVISTA'] != 0
r1data5 = r1data5[filtro]
r1data5['dif_absoluta'] = r1data5['RECEITA_PREVISTA'] - r1data5['RECEITA_ARRECADADA']
r1data5['dif_relativa'] = r1data5['dif_absoluta']/r1data5['RECEITA_PREVISTA']
r1data5.sort_values(by = 'dif_relativa', ascending=False)

#análise 2 - arrecadações que apresentam desvio padrão alto

r2data5 = data5[['DESC_RUBRICA', 'RECEITA_ARRECADADA_JAN', 'RECEITA_ARRECADADA_FEV', 'RECEITA_ARRECADADA_MAR', 'RECEITA_ARRECADADA_ABR', 'RECEITA_ARRECADADA_MAI', 'RECEITA_ARRECADADA_JUN', 'RECEITA_ARRECADADA_JUL', 'RECEITA_ARRECADADA_AGO', 'RECEITA_ARRECADADA_SET', 'RECEITA_ARRECADADA_OUT']]
r2data5['desvio padrao'] = r2data5.std(axis=1)
r3data5 = r2data5[['DESC_RUBRICA', 'desvio padrao']]
r3data5.sort_values(by = 'desvio padrao', ascending=False)

#Exportando os dados

r1data1.to_csv('r1data1.csv')
r2data1.to_csv('r2data1.csv')
r3data1.to_csv('r3data1.csv')
r4data1.to_csv('r4data1.csv')

r1data2.to_csv('r1data2.csv')
r2data2.to_csv('r2data2.csv')
r3data2.to_csv('r3data2.csv')

r1data3.to_csv('r1data3.csv')
r2data3.to_csv('r2data3.csv')
r3data3.to_csv('r3data3.csv')
r4data3.to_csv('r4data3.csv')

r1data4.to_csv('r1data4.csv')
r2data4.to_csv('r2data4.csv')
r3data4.to_csv('r3data4.csv')

r1data5.to_csv('r1data5.csv')
r2data5.to_csv('r2data5.csv')

#Download

files.download('r1data1.csv')
files.download('r1data1.csv')
files.download('r2data1.csv')
files.download('r3data1.csv')
files.download('r4data1.csv')

#Download

files.download('r1data2.csv')
files.download('r2data2.csv')
files.download('r3data2.csv')

#Download

files.download('r1data3.csv')
files.download('r2data3.csv')
files.download('r3data3.csv')
files.download('r4data3.csv')

#Download 

files.download('r1data4.csv')
files.download('r2data4.csv')
files.download('r3data4.csv')

files.download('r1data5.csv')
files.download('r2data5.csv')